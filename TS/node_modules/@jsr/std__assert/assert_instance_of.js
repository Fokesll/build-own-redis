// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
import { AssertionError } from "./assertion_error.js";
/**
 * Make an assertion that `obj` is an instance of `type`.
 * If not then throw.
 *
 * @example
 * ```ts
 * import { assertInstanceOf } from "@std/assert/assert-instance-of";
 *
 * assertInstanceOf(new Date(), Date); // Doesn't throw
 * assertInstanceOf(new Date(), Number); // Throws
 * ```
 */ export function assertInstanceOf(actual, expectedType, msg = "") {
  if (actual instanceof expectedType) return;
  const msgSuffix = msg ? `: ${msg}` : ".";
  const expectedTypeStr = expectedType.name;
  let actualTypeStr = "";
  if (actual === null) {
    actualTypeStr = "null";
  } else if (actual === undefined) {
    actualTypeStr = "undefined";
  } else if (typeof actual === "object") {
    actualTypeStr = actual.constructor?.name ?? "Object";
  } else {
    actualTypeStr = typeof actual;
  }
  if (expectedTypeStr === actualTypeStr) {
    msg = `Expected object to be an instance of "${expectedTypeStr}"${msgSuffix}`;
  } else if (actualTypeStr === "function") {
    msg = `Expected object to be an instance of "${expectedTypeStr}" but was not an instanced object${msgSuffix}`;
  } else {
    msg = `Expected object to be an instance of "${expectedTypeStr}" but was "${actualTypeStr}"${msgSuffix}`;
  }
  throw new AssertionError(msg);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2VydF9pbnN0YW5jZV9vZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwRUFBMEU7QUFDMUUscUNBQXFDO0FBQ3JDLFNBQVMsY0FBYywrQkFBK0I7QUFVdEQ7Ozs7Ozs7Ozs7O0NBV0MsR0FDRCxPQUFPLFNBQVMsaUJBQ2QsTUFBZSxFQUNmLFlBQWUsRUFDZixNQUFNLEVBQUU7RUFFUixJQUFJLGtCQUFrQixjQUFjO0VBRXBDLE1BQU0sWUFBWSxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHO0VBQ3JDLE1BQU0sa0JBQWtCLGFBQWEsSUFBSTtFQUV6QyxJQUFJLGdCQUFnQjtFQUNwQixJQUFJLFdBQVcsTUFBTTtJQUNuQixnQkFBZ0I7RUFDbEIsT0FBTyxJQUFJLFdBQVcsV0FBVztJQUMvQixnQkFBZ0I7RUFDbEIsT0FBTyxJQUFJLE9BQU8sV0FBVyxVQUFVO0lBQ3JDLGdCQUFnQixPQUFPLFdBQVcsRUFBRSxRQUFRO0VBQzlDLE9BQU87SUFDTCxnQkFBZ0IsT0FBTztFQUN6QjtFQUVBLElBQUksb0JBQW9CLGVBQWU7SUFDckMsTUFDRSxDQUFDLHNDQUFzQyxFQUFFLGdCQUFnQixDQUFDLEVBQUUsVUFBVSxDQUFDO0VBQzNFLE9BQU8sSUFBSSxrQkFBa0IsWUFBWTtJQUN2QyxNQUNFLENBQUMsc0NBQXNDLEVBQUUsZ0JBQWdCLGlDQUFpQyxFQUFFLFVBQVUsQ0FBQztFQUMzRyxPQUFPO0lBQ0wsTUFDRSxDQUFDLHNDQUFzQyxFQUFFLGdCQUFnQixXQUFXLEVBQUUsY0FBYyxDQUFDLEVBQUUsVUFBVSxDQUFDO0VBQ3RHO0VBRUEsTUFBTSxJQUFJLGVBQWU7QUFDM0IifQ==