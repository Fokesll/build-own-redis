// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
import { equal } from "./equal.js";
import { format } from "./_format.js";
import { AssertionError } from "./assertion_error.js";
/**
 * Make an assertion that `actual` includes the `expected` values. If not then
 * an error will be thrown.
 *
 * Type parameter can be specified to ensure values under comparison have the
 * same type.
 *
 * @example
 * ```ts
 * import { assertArrayIncludes } from "@std/assert/assert-array-includes";
 *
 * assertArrayIncludes([1, 2], [2]); // Doesn't throw
 * assertArrayIncludes([1, 2], [3]); // Throws
 * ```
 */ export function assertArrayIncludes(actual, expected, msg) {
  const missing = [];
  for(let i = 0; i < expected.length; i++){
    let found = false;
    for(let j = 0; j < actual.length; j++){
      if (equal(expected[i], actual[j])) {
        found = true;
        break;
      }
    }
    if (!found) {
      missing.push(expected[i]);
    }
  }
  if (missing.length === 0) {
    return;
  }
  const msgSuffix = msg ? `: ${msg}` : ".";
  msg = `Expected actual: "${format(actual)}" to include: "${format(expected)}"${msgSuffix}\nmissing: ${format(missing)}`;
  throw new AssertionError(msg);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2VydF9hcnJheV9pbmNsdWRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwRUFBMEU7QUFDMUUscUNBQXFDO0FBQ3JDLFNBQVMsS0FBSyxxQkFBcUI7QUFDbkMsU0FBUyxNQUFNLHVCQUF1QjtBQUN0QyxTQUFTLGNBQWMsK0JBQStCO0FBS3REOzs7Ozs7Ozs7Ozs7OztDQWNDLEdBQ0QsT0FBTyxTQUFTLG9CQUNkLE1BQXVCLEVBQ3ZCLFFBQXlCLEVBQ3pCLEdBQVk7RUFFWixNQUFNLFVBQXFCLEVBQUU7RUFDN0IsSUFBSyxJQUFJLElBQUksR0FBRyxJQUFJLFNBQVMsTUFBTSxFQUFFLElBQUs7SUFDeEMsSUFBSSxRQUFRO0lBQ1osSUFBSyxJQUFJLElBQUksR0FBRyxJQUFJLE9BQU8sTUFBTSxFQUFFLElBQUs7TUFDdEMsSUFBSSxNQUFNLFFBQVEsQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLEVBQUUsR0FBRztRQUNqQyxRQUFRO1FBQ1I7TUFDRjtJQUNGO0lBQ0EsSUFBSSxDQUFDLE9BQU87TUFDVixRQUFRLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRTtJQUMxQjtFQUNGO0VBQ0EsSUFBSSxRQUFRLE1BQU0sS0FBSyxHQUFHO0lBQ3hCO0VBQ0Y7RUFFQSxNQUFNLFlBQVksTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRztFQUNyQyxNQUFNLENBQUMsa0JBQWtCLEVBQUUsT0FBTyxRQUFRLGVBQWUsRUFDdkQsT0FBTyxVQUNSLENBQUMsRUFBRSxVQUFVLFdBQVcsRUFBRSxPQUFPLFNBQVMsQ0FBQztFQUM1QyxNQUFNLElBQUksZUFBZTtBQUMzQiJ9