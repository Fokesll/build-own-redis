/**
 * Utilities for working with OS-specific file paths.
 *
 * Codes in the examples uses POSIX path but it automatically use Windows path
 * on Windows. Use methods under `posix` or `win32` object instead to handle non
 * platform specific path like:
 * ```ts
 * import { posix, win32 } from "@std/path";
 * const p1 = posix.fromFileUrl("file:///home/foo");
 * const p2 = win32.fromFileUrl("file:///home/foo");
 * console.log(p1); // "/home/foo"
 * console.log(p2); // "\\home\\foo"
 * ```
 *
 * This module is browser compatible.
 *
 * @module
 */ export * from "./basename.d.ts";
export * from "./constants.d.ts";
export * from "./dirname.d.ts";
export * from "./extname.d.ts";
export * from "./format.d.ts";
export * from "./from_file_url.d.ts";
export * from "./is_absolute.d.ts";
export * from "./join.d.ts";
export * from "./normalize.d.ts";
export * from "./parse.d.ts";
export * from "./relative.d.ts";
export * from "./resolve.d.ts";
export * from "./to_file_url.d.ts";
export * from "./to_namespaced_path.d.ts";
export * from "./common.d.ts";
export * from "../_interface.d.ts";
export * from "./glob_to_regexp.d.ts";
export * from "./is_glob.d.ts";
export * from "./join_globs.d.ts";
export * from "./normalize_glob.d.ts";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpQkMsR0FDRCxnQ0FBOEI7QUFDOUIsaUNBQStCO0FBQy9CLCtCQUE2QjtBQUM3QiwrQkFBNkI7QUFDN0IsOEJBQTRCO0FBQzVCLHFDQUFtQztBQUNuQyxtQ0FBaUM7QUFDakMsNEJBQTBCO0FBQzFCLGlDQUErQjtBQUMvQiw2QkFBMkI7QUFDM0IsZ0NBQThCO0FBQzlCLCtCQUE2QjtBQUM3QixtQ0FBaUM7QUFDakMsMENBQXdDO0FBQ3hDLDhCQUE0QjtBQUM1QixtQ0FBaUM7QUFDakMsc0NBQW9DO0FBQ3BDLCtCQUE2QjtBQUM3QixrQ0FBZ0M7QUFDaEMsc0NBQW9DIn0=